-- MySQL Script generated by MySQL Workbench
-- Fri Feb 23 21:35:30 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bronze
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema silver
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema gold
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gold
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gold` ;
USE `gold` ;

-- -----------------------------------------------------
-- Table `gold`.`tb_dim_dia_semana`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gold`.`tb_dim_dia_semana` (
  `id_dia_semana` INT NOT NULL COMMENT 'Surrogate key da dimensão',
  `ds_dia_semana` VARCHAR(20) NOT NULL COMMENT 'Dia da semana por extenso',
  `ds_dia_semana_abrev` VARCHAR(3) NOT NULL COMMENT 'Dia da semana abreviado no formato. Exemplo: dom, seg',
  `ds_sigla_dia_semana` VARCHAR(3) NOT NULL COMMENT 'Sigla inicial do dia da semana. Exemplo: D para domingo, S para segunda',
  `dt_insr` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de inserção do registro na tabela',
  PRIMARY KEY (`id_dia_semana`));


-- -----------------------------------------------------
-- Table `gold`.`tb_dim_ano`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gold`.`tb_dim_ano` (
  `id_ano` SMALLINT NOT NULL COMMENT 'Surrogate key da dimensão',
  `ds_ano` VARCHAR(4) NOT NULL COMMENT 'Ano no formato AAAA',
  `id_ano_anterior_1` SMALLINT NOT NULL COMMENT 'Surrogate key da própria dimensão de ano para recuperar o ano A-1',
  `id_ano_anterior_2` SMALLINT NOT NULL COMMENT 'Surrogate key da própria dimensão de ano para recuperar o ano A-2',
  `fl_ano_bissexto` TINYINT NOT NULL COMMENT 'Flag que indica se o ano é bissexto (0=não; 1=sim)',
  `dt_insr` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de inserção do registro na tabela',
  PRIMARY KEY (`id_ano`));


-- -----------------------------------------------------
-- Table `gold`.`tb_dim_quadrimestre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gold`.`tb_dim_quadrimestre` (
  `id_quadrimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão',
  `ds_quadrimestre` VARCHAR(15) NOT NULL COMMENT 'Semestre no formato Q/AAAA',
  `id_quadrimestre_anterior_1` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de quadrimestre para recuperar o quadrimestre Q-1',
  `id_quadrimestre_anterior_2` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de quadrimestre para recuperar o quadrimestre Q-2',
  `id_quadrimestre_ano_anterior` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de quadrimestre para recuperar o quadrimestre similar no ano anterior (Q-3)',
  `id_ano` SMALLINT NOT NULL COMMENT 'Surrogate key da dimensão de ano',
  `nr_quadrimestre` TINYINT NOT NULL COMMENT 'Número do quadrimestre (sem o ano). Valores possíveis: 1, 2, 3',
  `dt_insr` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de inserção do registro na tabela',
  PRIMARY KEY (`id_quadrimestre`),
  INDEX `fk_dim_quadrimestre_ano_idx` (`id_ano` ASC) VISIBLE,
  CONSTRAINT `fk_tb_dim_quadrimestre_ano`
    FOREIGN KEY (`id_ano`)
    REFERENCES `gold`.`tb_dim_ano` (`id_ano`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `gold`.`tb_dim_mes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gold`.`tb_dim_mes` (
  `id_mes` INT NOT NULL COMMENT 'Surrogate key da dimensão',
  `id_bimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de bimestre',
  `id_trimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de trimestre',
  `id_quadrimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de quadrimestre',
  `id_semestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de semestre',
  `id_ano` SMALLINT NOT NULL COMMENT 'Surrogate key da dimensão de ano',
  `nr_mes` TINYINT NOT NULL COMMENT 'Número do mês (sem o ano). Valores possíveis: 1,2,3,4,5,6,7,8,9,10,11,12',
  `ds_mes_ano` VARCHAR(40) NOT NULL COMMENT 'Mês ano por extenso no formato <nome do mês> de <ano>. Exemplo: janeiro de 2020',
  `ds_mes_ano_abrev` VARCHAR(10) NOT NULL COMMENT 'Mês/ano abreviado no formato Mmm/AAAA. Exemplo: jan/2020',
  `ds_mes_abrev` VARCHAR(3) NOT NULL COMMENT 'Mês abreviado no formato Mmm. Exemplo: Jan',
  `ds_sigla_mes` VARCHAR(1) NOT NULL COMMENT 'Sigla inicial do mês no formato M. Exemplo: J para janeiro, F para fevereiro',
  `id_mes_anterior_1` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês M-1',
  `id_mes_anterior_2` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês M-2',
  `id_mes_anterior_3` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês M-3',
  `id_mes_anterior_4` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês M-4',
  `id_mes_anterior_5` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês M-5',
  `id_mes_anterior_6` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês M-6',
  `id_mes_ano_anterior` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de mês para recuperar o mês similar no ano anterior',
  `dt_insr` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de inserção do registro na tabela',
  PRIMARY KEY (`id_mes`),
  INDEX `fk_dim_mes_quadrimestre_idx` (`id_quadrimestre` ASC) VISIBLE,
  CONSTRAINT `fk_tb_dim_mes_tb_dim_quadrimestre1`
    FOREIGN KEY (`id_quadrimestre`)
    REFERENCES `gold`.`tb_dim_quadrimestre` (`id_quadrimestre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `gold`.`tb_dim_semana`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gold`.`tb_dim_semana` (
  `id_semana` INT NOT NULL COMMENT 'Surrogate key da dimensão',
  `ds_semana` VARCHAR(25) NOT NULL COMMENT 'Período de dias equivalente a semana no formato <dd-mm> a <dd-mm>',
  `id_semana_anterior_1` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de semana para recuperar a semana S-1',
  `id_semana_anterior_2` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de semana para recuperar a semana S-2',
  `id_semana_anterior_3` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de semana para recuperar a semana s-3',
  `id_semana_anterior_4` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de semana para recuperar a semana S-4',
  `id_semana_ano_anterior` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de semana para recuperar a semana similar no ano anterior',
  `nr_semana` TINYINT NOT NULL COMMENT 'Número da semana (sem o ano). Valores possíveis: de 1 a 52',
  `dt_insr` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de inserção do registro na tabela',
  PRIMARY KEY (`id_semana`));


-- -----------------------------------------------------
-- Table `gold`.`tb_dim_dia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gold`.`tb_dim_dia` (
  `id_dia` INT NOT NULL COMMENT 'Surrogate key da dimensão',
  `dt_dia` DATETIME NOT NULL COMMENT 'Data no formato DD/MM/YYYY',
  `ds_dia` VARCHAR(10) NOT NULL COMMENT 'Data no formato YYYY-MM-DD',
  `id_dia_semana` INT NOT NULL COMMENT 'Surrogate key da dimensão de dia da semana',
  `id_semana` INT NOT NULL COMMENT 'Surrogate key da dimensão de semana',
  `id_mes` INT NOT NULL COMMENT 'Surrogate key da dimensão de mês',
  `id_bimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de bimestre',
  `id_trimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de trimestre',
  `id_quadrimestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de quadrimestre',
  `id_semestre` INT NOT NULL COMMENT 'Surrogate key da dimensão de semestre',
  `id_ano` SMALLINT NOT NULL COMMENT 'Surrogate key da dimensão de ano',
  `id_dia_anterior` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de dia para recuperar o dia D-1',
  `id_dia_ano_anterior` INT NOT NULL COMMENT 'Surrogate key da própria dimensão de dia para recuperar o dia D-365',
  `nr_dia` TINYINT NOT NULL COMMENT 'Número do dia (sem o mês, e sem o ano). Valores possíveis: 1 à 31',
  `nr_dia_ano` SMALLINT NOT NULL COMMENT 'Número do dia no ano. Valores possíveis: 1 à 365 (366 no caso de anos bissextos)',
  `fl_dia_util` TINYINT NOT NULL COMMENT 'Flag que indica se a data corresponde a um dia útil (0 - não, 1 - sim). Foram considerados dias não úteis sábados e domingos. Também são considerados dias não úteis os feriados nacionais e municipais (de São Paulo) a partir de 2001',
  `ds_estacao_ano` VARCHAR(20) NOT NULL COMMENT 'Estação do ano conforme calendário brasileiro. Valores possíveis: primavera, verão, outono e inverno',
  `dt_insr` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Data de inserção do registro na tabela',
  `nr_semana_no_mes` DECIMAL(38,0) NULL DEFAULT NULL COMMENT 'Número da semana dentro do mês (de 1 a 5)',
  `tb_dim_semana_id_semana` INT NOT NULL,
  INDEX `idx_dim_dia_dt_dia` (`dt_dia` ASC) VISIBLE,
  INDEX `idx_dim_dia_reports` (`id_dia` ASC, `dt_dia` ASC) VISIBLE,
  PRIMARY KEY (`id_dia`),
  INDEX `fk_dim_dia_dia_semana_idx` (`id_dia_semana` ASC) VISIBLE,
  INDEX `fk_dim_dia_ano_idx` (`id_ano` ASC) VISIBLE,
  INDEX `fk_dim_dia_mes_idx` (`id_mes` ASC) VISIBLE,
  INDEX `fk_dim_dia_semana_idx` (`tb_dim_semana_id_semana` ASC, `id_semana` ASC) VISIBLE,
  CONSTRAINT `fk_dim_dia_dia_semana`
    FOREIGN KEY (`id_dia_semana`)
    REFERENCES `gold`.`tb_dim_dia_semana` (`id_dia_semana`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dim_dia_ano`
    FOREIGN KEY (`id_ano`)
    REFERENCES `gold`.`tb_dim_ano` (`id_ano`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dim_dia_mes`
    FOREIGN KEY (`id_mes`)
    REFERENCES `gold`.`tb_dim_mes` (`id_mes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dim_dia_semana`
    FOREIGN KEY (`tb_dim_semana_id_semana` , `id_semana`)
    REFERENCES `gold`.`tb_dim_semana` (`id_semana` , `id_semana`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
